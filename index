const isValid = (weights, W, x) => {
  const n = weights.length;
  let sum = 0;
  for (let i = 0; i < n; i++) {
    sum += x[i] * weight[i];
    if (sum > W) return false;
  }
  return sum <= W;
};

const fitness = (values, x) => {
  const n = x.length;
  let val = 0;
  for (let i = 0; i < n; i++) val += values[i] * x[i];

  return val;
};

const Exastive = (weight, values, W, xx) => {
  const n = weight.length;

  let bestVal = 0;
  let bestSolution = Array(n).fill(0);

  console.log("best sol", bestSolution);

  for (let i = 0; i < n << 2; i++) {
    // console.log(i);
    const bin = i.toString(2).padStart(n, "0");
    // console.log(bin);
    const x = [...bin].map((e) => +e);
    // console.log(x);
    console.log(isValid(weight, W, x), fitness(values, x));

    if (isValid(weight, W, x) && fitness(values, x) > bestVal) {
      bestVal = fitness(values, x);
      bestSolution = x;
    }
  }

  return [bestVal, bestSolution];
};

const weight = [1, 15, 6, 7];
const values = [1, 16, 6, 5];
const W = 25;
const x = [];

const [bestVal, bestSolution] = Exastive(weight, values, W, x);

console.log("bestSolution : ", bestSolution);
console.log("bestVal : ", bestVal);

// for(let i = 0; i < Math.pow(2 , n << 2 ); i++)
//     const bin =
